{
  "articleId": "think-while-coding",
  "lang": "cn",
  "lastUpdateStartTime": "2025-02-14T13:23:27.741Z",
  "lastUpdateEndTime": "2025-02-14T13:23:50.248Z",
  "summaries": [
    "文章批评开发中无脑复制粘贴代码的现象，指出重复switch、冗余方法、无脑try-catch等问题导致维护困难，建议采用多态、策略模式、泛型及框架特性优化代码，并以登录验证为例展示装饰器与Spring Filter的解决方案，强调注重代码质量可提升可维护性，避免低效代码增加调试成本。"
  ],
  "hash": "55d28f7e3a44d7a3e82c2acdb111f18256f3e6606745c4c755f5a038ee17d9cd",
  "mode": {
    "mode": "azure-ai",
    "model": "DeepSeek-R1"
  }
}