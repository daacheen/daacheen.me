{
  "articleId": "support-sqlserver-in-wakapi",
  "lang": "cn",
  "hash": "2894ee61840e2353f94fdd29fb81283beca5354b54bd7435b9453fdffcf7c88e",
  "summaries": [
    {
      "metadata": {
        "summarizer": "azure-ai",
        "model": "DeepSeek-R1"
      },
      "summaries": [
        "作者在尝试将Wakapi项目迁移至SQL Server时，遇到一系列数据库适配问题。包括SQL语法差异、ORM框架配置、外键约束冲突及GORM库的Upsert功能缺陷。通过修改原生SQL语句、动态调整时间字段类型映射、重构外键关系、手动处理唯一索引冲突，最终解决兼容性问题并成功合并代码。此次实践深入了解了SQL Server特性与GORM内部机制，验证了通过实际项目攻坚学习技术的有效性。"
      ],
      "startTime": "2025-02-14T13:43:38.671Z",
      "endTime": "2025-02-14T13:44:02.939Z"
    },
    {
      "metadata": {
        "summarizer": "ollama",
        "model": "deepseek-r1:7b"
      },
      "summaries": [
        "为了解决在SQL Server中使用Goblin框架插入相同数据两次导致只记录一次的问题，我们需要修改Goblin的适配器代码以正确处理由于唯一索引冲突而产生的插入失败。以下是详细步骤和解释：\n\n### 问题分析\n1. **错误原因**：在尝试插入相同的数据时，第一次成功，第二次因为唯一索引冲突而失败。使用SQL Server的dialector时，该错误信息被部分过滤。\n2. **现有代码逻辑**：Goblin的dialector中，在处理Create操作时会检查是否会导致唯一索引冲突，并基于错误信息决定是否抛出错误。然而，这种检查可能不够全面。\n\n### 解决方案\n1. **修改Dialects/sqllib.go文件**：\n   - 在处理`r.db.Create(h)`时，添加逻辑判断以捕捉由于唯一索引冲突而产生的特定错误。\n   - 如果是由于重复数据导致的索引冲突，并且错误信息符合特定模式，则忽略该错误。\n\n### 具体修改步骤\n1. **获取DIALECT名称**：\n   - 在`Create`方法中，检查当前使用的dialector名称是否为SQL Server适配器。\n   \n2. **捕捉唯一索引冲突错误**：\n   - 检查错误信息中包含特定的子字符串，如“Cannot insert duplicate key row...”。\n   - 如果满足条件，则继续执行后续操作（即插入记录）。\n\n3. **整合到现有代码中**：\n   - 在Goblin的dialector逻辑中添加条件判断，避免由于唯一索引冲突而终止插入操作。\n\n### 修改后的代码示例\n```go\n// 在Dialects/sqllib.go文件中，修改Create方法部分：\n\nfunc (d *Dialect) Create(h *Heartbeat, context []string) error {\n    if d.DialectorName() == sqlserver.Dialector{}.Name() {\n        err := r.db.Create(h).Error\n        if err != nil {\n            // 检查错误信息是否为唯一索引冲突\n            if strings.Contains(err.Error(), \"Cannot insert duplicate key row in object 'dbo.heartbeats' with unique index '...'\") {\n                continue  // 忽略重复数据的插入尝试\n            }\n            return err\n        }\n    }\n\n    // 其他 Diazeler 的处理逻辑保持不变...\n\n    r.db.Create(h)\n}\n```\n\n### 代码解释\n- **DIALECT名称检查**：`if d.DialectorName() == sqlserver.Dialector{}.Name()` 确保只有在使用SQL Server适配器时才会执行后续逻辑。\n  \n- **错误捕捉**：`strings.Contains(err.Error(), \"Cannot insert duplicate key row...\")` 检查错误信息，确认是否为由于重复数据导致的唯一索引冲突。\n\n- **继续插入**：如果捕获到符合条件的错误，则调用`continue`关键字，允许后续操作（如插入记录）继续进行。\n\n### 注意事项\n1. **性能考虑**：\n   - 这种修改可能导致在某些情况下无法及时检测到重复数据。建议监控性能以避免潜在的问题。\n2. **全面性检查**：\n   - 确保所有可能触发唯一索引冲突错误的情况都被涵盖，以免漏掉某些异常情况。\n\n通过这些修改，当插入重复数据时，Goblin会忽略该错误信息，继续执行插入操作，从而在SQL Server中实现正确的记录。"
      ]
    }
  ]
}