{
  "articleId": "strongly-typed-i18n-with-typescript",
  "lang": "en",
  "lastUpdateStartTime": "2025-02-14T13:28:49.222Z",
  "lastUpdateEndTime": "2025-02-14T13:29:23.375Z",
  "summaries": [
    "The article discusses internationalization (i18n) challenges, focusing on the \"raw string\" problem when using placeholder IDs for localized content. It highlights risks like typos, lack of IDE support, and refactoring difficulties. A solution using JavaScript Proxies to generate strongly typed IDs is proposed: by recording key paths during object access, it enables type-safe, autocompleted IDs while preserving i18n benefits (fallback, interpolation). This approach avoids raw strings, improves maintainability, and leverages type inference for error checking. Drawbacks include Proxy performance costs, GC overhead, and potential frequent component updates. The author advocates typed solutions to enhance efficiency and reduce bugs in multilingual applications."
  ],
  "hash": "7c96db19070360dec8673ffd5caf3cd34a972c7b50304d966e150ffdfe5863f1",
  "mode": {
    "mode": "azure-ai",
    "model": "DeepSeek-R1"
  }
}