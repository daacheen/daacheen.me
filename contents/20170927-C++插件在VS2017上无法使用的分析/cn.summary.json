{
  "articleId": "analysis-on-cpp-plugin-not-running-at-vs2017",
  "lang": "cn",
  "hash": "f2c967cfa0ea44e2ce3016bbab446149f257798fe60ba03fceb5ce972fecb82a",
  "summaries": [
    {
      "metadata": {
        "summarizer": "azure-ai",
        "model": "DeepSeek-R1"
      },
      "summaries": [
        "作者在VS2017中使用CppPlugin插件时出现“获取可执行文件路径出错”，反编译定位到TestControllerImp.cs中通过ConfigurationManager获取输出路径的代码存在异常。测试发现VS2017的Configuration.Properties返回null，导致API失效。微软未在文档提及该变动，社区反馈类似问题均未解决，确认为VS2017兼容性问题。结论为微软API变动导致插件无法适配，建议继续使用VS2013或虚拟机方案。"
      ],
      "startTime": "2025-02-14T13:21:43.451Z",
      "endTime": "2025-02-14T13:22:06.500Z"
    },
    {
      "metadata": {
        "summarizer": "ollama",
        "model": "deepseek-r1:8b"
      },
      "summaries": [
        "这篇文章讲述了用户尝试将插件从VS2013迁移到VS2017时遇到的问题。最初，他希望通过直接解包并修改插件配置文件，在VS2017中运行插件，但在运行测试时出现错误。通过反编译和分析，发现错误出现在C#代码中的属性访问方式上，特别是Solution和Name的调用方法。\n\n进一步调试显示，插件中涉及ConfigurationManager的使用出现了问题，尤其是在获取配置输出路径时，Properties对象返回null。此外，用户尝试创建新的VSIX扩展项目进行测试，发现同样的错误：Properties为null，无法访问特定项。这表明问题可能与VS2017 API的变化有关。\n\n虽然微软文档中没有详细说明相关API的变动，但StackOverflow和开发者社区有类似的问题报告。用户提到在该平台找到了一些解决方案，但微软官方问题闭锁，未给出有效回复。这让用户感到不满，并建议读者放弃修复插件，直接使用虚拟机或实机安装VS2013。\n\n总结来说，这个问题是由于插件与VS2017的API变化不兼容，用户认为这是微软的问题，没有提供明确的解决方案。最终，他建议继续使用旧版本工具来避免麻烦。"
      ]
    }
  ]
}